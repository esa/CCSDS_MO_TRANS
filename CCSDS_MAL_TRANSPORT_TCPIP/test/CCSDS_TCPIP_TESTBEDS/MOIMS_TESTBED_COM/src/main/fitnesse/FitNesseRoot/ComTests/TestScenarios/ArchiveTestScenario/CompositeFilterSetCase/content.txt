#
# Copyright or Â© or Copr. CNES
#
# This software is a computer program whose purpose is to provide a 
# framework for the CCSDS Mission Operations services.
#
# This software is governed by the CeCILL-C license under French law and
# abiding by the rules of distribution of free software.  You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL-C
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL-C license and that you accept its terms.
#

!*< Hidden
!define TEST_SYSTEM {slim}

|Import|
|org.ccsds.moims.mo.com.test.archive|

*!
!3 !-CompositeFilterSet-! structure test case
This tests each prescriptive statement defined for the structure 'CompositeFilterSet' in the contexts of the operation 'query' and 'count' (when appropriate).

!4 Composite filter set

* !-CompositeFilterSet-!) Contains a list of !-CompositeFilters-! that are AND'd together to form a more complex filter.

|script| archive scenario |
|ensure| reset archive scenario |
|ensure| test archive client has been created |
|ensure| call reset test on service provider |
|note| Store some objects |
|ensure| clear archive details list |
|ensure| clear test object payload list |
|ensure| create object details | 1 |
|ensure| add archive details with instance id | 0 | and network | network | and timestamp | 60 |
|ensure| add object payload with int | 232 | and sub composite | true | and int | 345 |
|ensure| add archive details with instance id | 0 | and network | network | and timestamp | 60 |
|ensure| add object payload with int | 233 | and sub composite | true | and int | 343 |
|ensure| add archive details with instance id | 0 | and network | network | and timestamp | 60 |
|ensure| add object payload with int | 234 | and sub composite | true | and int | 344 |
|ensure| add archive details with instance id | 0 | and network | network | and timestamp | 60 |
|ensure| add object payload with int | 232 | and sub composite | true | and int | 341 |
|ensure| store | true |
|ensure| returned instance id list size is | 4 |
|ensure| clear archive query list |
|ensure| add archive query with sorting order | TRUE | and field | compositeField.integerField |
|ensure| reset composite filter set list |
|ensure| reset composite filter set |
|ensure| add composite filter with field name | compositeField.integerField | and operator | DIFFER | and integer | 343 |
|ensure| add composite filter with field name | compositeField.integerField | and operator | DIFFER | and integer | 344 |
|ensure| add composite filter set |
|ensure| query | true |
|ensure| queried archive details list size is | 2 |
|ensure| queried object list size is | 2 |
|ensure| queried object at index | 0 | has composite integer value | 341 |
|ensure| queried object at index | 1 | has composite integer value | 345 |
|ensure| count |
|ensure| count at index | 0 | is | 2 |
