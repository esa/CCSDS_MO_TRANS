#
# Copyright or Â© or Copr. CNES
#
# This software is a computer program whose purpose is to provide a 
# framework for the CCSDS Mission Operations services.
#
# This software is governed by the CeCILL-C license under French law and
# abiding by the rules of distribution of free software.  You can  use, 
# modify and/ or redistribute the software under the terms of the CeCILL-C
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info". 
#
# As a counterpart to the access to the source code and  rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited
# liability. 
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or 
# data to be ensured and,  more generally, to use and operate it in the 
# same conditions as regards security. 
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL-C license and that you accept its terms.
#

!*< Hidden
!define TEST_SYSTEM {slim}

|Import|
|org.ccsds.moims.mo.com.test.archive|

*!
!3 Count operation test case
This tests each prescriptive statement defined for the operation 'count'.

!4 General count
Checks the following statements:
* a) The !-ObjectType-!, !-ArchiveQuery-! and !-QueryFilter-! parts of the request shall be populated exactly the same as for the query operation.
* b) The response shall contain the count of matched objects.
* c) There shall be an entry in each returned list for each entry in the request list.
* d) The returned lists shall be ordered the same as the request query lists so that the response can be matched to the corresponding request.

This is tested in the !-QueryCase-!, !-ArchiveQueryCase-! and !-CompositeFilterCase-! tests. One general test is done below.

|script| archive scenario |
|ensure| reset archive scenario |
|ensure| test archive client has been created |
|ensure| call reset test on service provider |
|note| Store two objects of type 1 |
|ensure| clear archive details list |
|ensure| clear test object payload list |
|ensure| create object details | 1 |
|ensure| add archive details with instance id | 0 | and network | network1 | and timestamp | 60 |
|ensure| add object payload with int | 234 | and sub composite | true | and int | 345 |
|ensure| add archive details with instance id | 0 | and network | network2 | and timestamp | 61 |
|ensure| add object payload with int | 235 | and sub composite | true | and int | 346 |
|ensure| store | true |
|note| Store one object of type 2 |
|ensure| clear archive details list |
|ensure| clear test object payload list |
|ensure| reset object type | 2 |
|ensure| add archive details with instance id | 0 | and network | network2 | and timestamp | 62 |
|ensure| add integer payload | 456 |
|ensure| store | true |
|ensure| returned instance id list size is | 1 |
|note| Count two queries done for all object types |
|ensure| reset object type | 0 |
|ensure| add archive query with network | network2 | 
|ensure| add archive query with wildcards |
|ensure| add null query filter |
|ensure| add null query filter |
|ensure| count |
|ensure| count at index | 0 | is | 2 |
|ensure| count at index | 1 | is | 3 |

!4 Invalid
Checks the following statements:
* INVALID.a) One or more of the query filters supplied contains an invalid value.
* INVALID.b) The extra information field contains the indexes of the erroneous values from the originating list supplied.

|script| archive scenario |
|ensure| reset archive scenario |
|ensure| test archive client has been created |
|ensure| call reset test on service provider |
|note| Store some objects |
|ensure| clear archive details list |
|ensure| clear test object payload list |
|ensure| create object details | 1 |
|ensure| add archive details with instance id | 0 | and network | network | and timestamp | 60 |
|ensure| add object payload with string | object1 |
|ensure| add archive details with instance id | 0 | and network | network | and timestamp | 60 |
|ensure| add object payload with string | object2 |
|ensure| store | true |
|ensure| returned instance id list size is | 2 |
|ensure| clear archive query list |
| note | add 4 queries and filters |
|ensure| add archive query with wildcards |
|ensure| add archive query with wildcards |
|ensure| add archive query with wildcards |
|ensure| add archive query with wildcards |
|ensure| reset composite filter set list |
| note | valid filter |
|ensure| reset composite filter set |
|ensure| add composite filter with field name | stringField | and operator | CONTAINS | and string | object |
|ensure| add composite filter set |
| note | invalid filter |
|ensure| reset composite filter set |
|ensure| add composite filter with field name | stringField | and operator | LESS | and string | NULL |
|ensure| add composite filter set |
| note | valid filter |
|ensure| reset composite filter set |
|ensure| add composite filter with field name | stringField | and operator | CONTAINS | and string | object |
|ensure| add composite filter set |
| note | invalid filter |
|ensure| reset composite filter set |
|ensure| add composite filter with field name | stringField | and operator | LESS | and string | NULL |
|ensure| add composite filter set |
|ensure| count |
|ensure| returned error is invalid |
|ensure| invalid query index at | 0 | is | 1 |
|ensure| invalid query index at | 1 | is | 3 |





