# ----------------------------------------------------------------------------
# Copyright (C) 2013      European Space Agency
#                         European Space Operations Centre
#                         Darmstadt
#                         Germany
# ----------------------------------------------------------------------------
# System                : CCSDS MO COM Test bed
# ----------------------------------------------------------------------------
# Licensed under the European Space Agency Public License, Version 2.0
# You may not use this file except in compliance with the License.
#
# Except as expressly set forth in this License, the Software is provided to
# You on an "as is" basis and without warranties of any kind, including without
# limitation merchantability, fitness for a particular purpose, absence of
# defects or errors, accuracy or non-infringement of intellectual property rights.
# 
# See the License for the specific language governing permissions and
# limitations under the License. 
# ----------------------------------------------------------------------------

!*< Hidden
!define TEST_SYSTEM {slim}

|Import|
|org.ccsds.moims.mo.com.test.event|
*!


!3 Event Capability test case
Part 1 - Core Functionality:
This part of the test covers the following:
* That events generated by the provider are received by the client 
* That the event header is correctly populated
* That the event object details are correctly populated
* that the event element is correctly populated with the event specific payload
This part of the test verifies each prescriptive statement defined for the Event
Service in COM Usage and OPERATION:MONITOREVENT sections.

Part 2 - Archive Service Usage:
This part of the test covers functionality related to archiving of events:
* That events are archived
* That the archived details reflect the contents of events
* That the source & related link are correctly populated 
This part of the test verifies each prescriptive statement defined for the Event
Service in the COM Archive Service Usage section.

In the test execution report the field INSIDX (where X is an integer) refer to the
instance identifier of a COM object created in the test.

The field EVIDX (where X is an integer) is an event identifier allocated by the client to
allow events to be easily referenced in the test.


!*> Sub scenario definitions

|scenario| retrieve and check archive item for event | event |
|ensure| retrieve archive item for event |@event |
|ensure| retrieved archive item instance identifier matches for event |@event|
|ensure| retrieved archive item object details match for event |@event|
|ensure| retrieved archive item timestamp matches for event |@event|
|ensure| retrieved archive item provider matches for event |@event|
|ensure| retrieved archive item body matches for event |@event|
***********!

|script| event test scenario |
|note| Part 1 - Core functionality|
|ensure| test event service client has been created |
|ensure| reset archive scenario |
|ensure| call reset on archive service provider |
|ensure| call reset test on service provider with domain|!-ESA_EVENTS-!|
|ensure| register for events from service provider in domain|!-ESA_EVENTS-!|
|$INSID1=| create instance of object A in domain | !-ESA-! | with description | !-behold instance of object A-! |
|$EVID1= | creation event received for object |!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 | 
|ensure| creation event |$EVID1 | header valid for object|!-TestObjectA-!|
|ensure| creation event |$EVID1 | object details valid for object|!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 | 
|ensure| creation event |$EVID1 | element valid for object with description | !-behold instance of object A-! |
|$INSID2=| create instance of object B in domain | !-ESA2-! | with description | !-behold instance of object B-! | with parent instance Id  |$INSID1 |   
|$EVID2= | creation event received for object |!-TestObjectB-!| in domain | !-ESA2-! | with instance identifier | $INSID2 | 
|ensure| creation event |$EVID2 | header valid for object|!-TestObjectB-!|
|ensure| creation event |$EVID2 | object details valid for object|!-TestObjectB-!| in domain | !-ESA2-! | with instance identifier | $INSID2 | with parent instance Id  |$INSID1 |
|ensure| creation event |$EVID2 | element valid for object with description | !-behold instance of object B-! |
|ensure| update instance|$INSID1| with enum field | !-FOURTH-! | with duration field | !-1000-! | with numeric list field | [1,2,3,4,5] |
|$EVID3= | update event received for object |!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 | 
|ensure| update event |$EVID3 | header valid for object|!-TestObjectA-!|
|ensure| update event |$EVID3 | object details valid for object|!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 |
|ensure| update event |$EVID3 | element valid for object with enum field | !-FOURTH-! | with duration field | !-1000-! | with numeric list field | [1,2,3,4,5] |
|ensure| update instance|$INSID1| with composite fields with uoctet | !-255-! | with octet | !--2-! | with double | !-1.1-! |
|$EVID4= | update event received for object |!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 | 
|ensure| update event |$EVID4 | header valid for object|!-TestObjectA-!|
|ensure| update event |$EVID4 | object details valid for object|!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 |
|ensure| update event |$EVID4 | element valid for object with composite fields  with uoctet | !-255-! | with octet | !--2-! | with double | !-1.1-! |
|ensure| delete instance of object B in domain | !-ESA-! | with instance Id | $INSID2 |
|$EVID5= | deletion event received for object |!-TestObjectB-!| in domain | !-ESA-! | with instance identifier | $INSID2 | 
|ensure| deletion event |$EVID5 | header valid for object|!-TestObjectB-!|
|ensure| deletion event |$EVID5 | object details valid for object|!-TestObjectB-!| in domain | !-ESA-! | with instance identifier | $INSID2 | with parent instance identifier | $INSID1 | 
|ensure| deletion event |$EVID5 | element valid for object with description | !-behold instance of object B-! |
|ensure| delete instance of object A in domain | !-ESA-! | with instance Id | $INSID1 |
|$EVID6= | deletion event received for object |!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 | 
|ensure| deletion event |$EVID6 | header valid for object|!-TestObjectA-!|
|ensure| deletion event |$EVID6 | object details valid for object|!-TestObjectA-!| in domain | !-ESA-! | with instance identifier | $INSID1 | with parent instance identifier || 
|ensure| deletion event |$EVID6 | element valid for object with description | !-behold instance of object A-! |
|note| Part 2 - Archive service usage|
|retrieve and check archive item for event | $EVID1 |
|retrieve and check archive item for event | $EVID2 |
|retrieve and check archive item for event | $EVID3 |
|retrieve and check archive item for event | $EVID4 |
|retrieve and check archive item for event | $EVID5 |
|retrieve and check archive item for event | $EVID6 |
