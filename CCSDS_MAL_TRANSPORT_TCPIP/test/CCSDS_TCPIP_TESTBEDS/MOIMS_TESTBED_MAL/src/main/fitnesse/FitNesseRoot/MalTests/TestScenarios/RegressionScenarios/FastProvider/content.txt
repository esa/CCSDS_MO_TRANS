# ----------------------------------------------------------------------------
# Copyright (C) 2016      European Space Agency
#                         European Space Operations Centre
#                         Darmstadt
#                         Germany
# ----------------------------------------------------------------------------
# System                : CCSDS MO MAL Test bed
# ----------------------------------------------------------------------------
# Licensed under the European Space Agency Public License, Version 2.0
# You may not use this file except in compliance with the License.
#
# Except as expressly set forth in this License, the Software is provided to
# You on an "as is" basis and without warranties of any kind, including without
# limitation merchantability, fitness for a particular purpose, absence of
# defects or errors, accuracy or non-infringement of intellectual property rights.
# 
# See the License for the specific language governing permissions and
# limitations under the License. 
# ----------------------------------------------------------------------------

!2 Fast provider test scenario

!*< Hidden
!define TEST_SYSTEM {slim}

|Import|
|org.ccsds.moims.mo.mal.test.regression.fastprovider|

*!
In this test we check to ensure the situation where the provider is extremely fast compared to the consumer does not cause problems
with the consumer.
Previously there was a situation where a very fast provider (compared to a very slow consumer) was able to complete and return from
an INVOKE pattern before the consumer was able to set up everything internally in the MAL for the interaction. This meant that
messages from the provider were either being rejected or the consumer was unable to wait for the response because it already has
been received and dropped.

|script| fast provider scenario|
|ensure| initialise consumer|
|note| test SUBMIT pattern|
|ensure| normal submit completes without an error|
|ensure| error submit completes with an error|
|note| test REQUEST pattern|
|ensure| normal submit completes without an error|
|ensure| error submit completes with an error|
|note| test INVOKE pattern|
|ensure| normal invoke completes without an error|
|ensure| error invoke completes with an error|
|note| test PROGRESS pattern|
|ensure| normal progress completes without an error|
|ensure| error progress completes with an error|
