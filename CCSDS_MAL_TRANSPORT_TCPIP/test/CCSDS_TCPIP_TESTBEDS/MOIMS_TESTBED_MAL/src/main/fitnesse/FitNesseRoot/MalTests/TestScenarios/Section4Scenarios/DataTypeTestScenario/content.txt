# ----------------------------------------------------------------------------
# Copyright (C) 2013      European Space Agency
#                         European Space Operations Centre
#                         Darmstadt
#                         Germany
# ----------------------------------------------------------------------------
# System                : CCSDS MO MAL Test bed
# ----------------------------------------------------------------------------
# Licensed under the European Space Agency Public License, Version 2.0
# You may not use this file except in compliance with the License.
#
# Except as expressly set forth in this License, the Software is provided to
# You on an "as is" basis and without warranties of any kind, including without
# limitation merchantability, fitness for a particular purpose, absence of
# defects or errors, accuracy or non-infringement of intellectual property rights.
# 
# See the License for the specific language governing permissions and
# limitations under the License. 
# ----------------------------------------------------------------------------

!2 Data type test scenario

!*< Hidden
!define TEST_SYSTEM {slim}

|Import|
|org.ccsds.moims.mo.mal.test.datatype|

*!
A list of MAL data structure instances is statically defined according to the following constraints:
 * All the data types shall be instantiated at least once.
 * Enumerations shall be instantiated once for each enumerated value.
 * Abstract types need to be extended by a concrete type for the test
 * The value Null shall belong to the list
 * The value Null shall be inserted into a Composite structure

This data list is statically known by the !-DataTest-! service provider and consumer.
The consumer takes the data from the list one by one, in the same order, and calls the operation 'testData'. It checks that no error is raised by the provider, especially DATA_ERROR and BAD_ENCODING.

|script| data type scenario|
|check| explicit duration type works| OK|
|check| explicit Fine Time type works| OK|
|check| explicit Identifier type works| OK|
|check| explicit Time type works| OK|
|check| explicit URI type works| OK|
|check| explicit Blob type works| OK|
|check| explicit Boolean type works| OK|
|check| explicit Octet type works| OK|
|check| explicit Double type works| OK|
|check| explicit Float type works| OK|
|check| explicit Integer type works| OK|
|check| explicit Long type works| OK|
|check| explicit Short type works| OK|
|check| explicit String type works| OK|
|check| explicit UOctet type works| OK|
|check| explicit UInteger type works| OK|
|check| explicit ULong type works| OK|
|check| explicit UShort type works| OK|
|check| attribute types work| OK|
|check| enumerations work| OK|
|check| complete composites work | OK|
|check| abstract composites work | OK|
|check| lists work | OK|
|check| nulls work|OK|
|check| composites with null work| OK|
|check| explicit multi return works| OK|
|check| abstract multi return works | OK|
|check| multi return with nulls work| OK|
